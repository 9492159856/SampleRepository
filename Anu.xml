<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="seeniumm">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../eclipse/"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>
    <path id="seeniumm.classpath">
        <pathelement location="bin"/>
        <pathelement location="../lib/selenium-java-2.53.1.jar"/>
        <pathelement location="../lib/selenium-server-standalone-2.53.1(1).jar"/>
        <pathelement location="../lib/testng-6.9.10(1).jar"/>
        <pathelement location="../lib/sikuli-api-1.2.0.jar"/>
        <pathelement location="../lib/jxl-2.6.12.jar"/>
        <pathelement location="C:/Users/ADMIN/.m2/repository/org/seleniumhq/selenium/selenium-api/2.53.1/selenium-api-2.53.1.jar"/>
        <pathelement location="../lib/poi-3.16-beta1/poi-3.16-beta1.jar"/>
        <pathelement location="../lib/poi-3.16-beta1/poi-examples-3.16-beta1.jar"/>
        <pathelement location="../lib/poi-3.16-beta1/poi-excelant-3.16-beta1.jar"/>
        <pathelement location="../lib/poi-3.16-beta1/poi-ooxml-3.16-beta1.jar"/>
        <pathelement location="../lib/poi-3.16-beta1/poi-ooxml-schemas-3.16-beta1.jar"/>
        <pathelement location="../lib/poi-3.16-beta1/poi-scratchpad-3.16-beta1.jar"/>
        <pathelement location="../lib/poi-3.16-beta1/lib/commons-codec-1.10.jar"/>
        <pathelement location="../lib/poi-3.16-beta1/lib/commons-collections4-4.1.jar"/>
        <pathelement location="../lib/poi-3.16-beta1/lib/commons-logging-1.2.jar"/>
        <pathelement location="../lib/poi-3.16-beta1/lib/junit-4.12.jar"/>
        <pathelement location="../lib/poi-3.16-beta1/lib/log4j-1.2.17.jar"/>
        <pathelement location="../lib/poi-3.16-beta1/ooxml-lib/curvesapi-1.04.jar"/>
        <pathelement location="../lib/poi-3.16-beta1/ooxml-lib/xmlbeans-2.6.0.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="seeniumm.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="AjaxD (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="seenium.AjaxD" todir="${junit.output.dir}"/>
            <classpath refid="seeniumm.classpath"/>
        </junit>
    </target>
    <target name="AlertDemo1">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="seenium.AlertDemo1" todir="${junit.output.dir}"/>
            <classpath refid="seeniumm.classpath"/>
        </junit>
    </target>
    <target name="JunitAnnoDemo">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="seenium.JunitAnnoDemo" todir="${junit.output.dir}"/>
            <classpath refid="seeniumm.classpath"/>
        </junit>
    </target>
    <target name="JunitAnnoDemo.testanu">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="seenium.JunitAnnoDemo" todir="${junit.output.dir}"/>
            <classpath refid="seeniumm.classpath"/>
        </junit>
    </target>
    <target name="JunitAnnotationsDemo">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="seenium.JunitAnnotationsDemo" todir="${junit.output.dir}"/>
            <classpath refid="seeniumm.classpath"/>
        </junit>
    </target>
    <target name="MemberDemo (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="seenium.MemberDemo" todir="${junit.output.dir}"/>
            <classpath refid="seeniumm.classpath"/>
        </junit>
    </target>
    <target name="MemberDemo">
        <java classname="seenium.MemberDemo" failonerror="true" fork="yes">
            <classpath refid="seeniumm.classpath"/>
        </java>
    </target>
    <target name="methodOverloading">
        <java classname="javapack.methodOverloading" failonerror="true" fork="yes">
            <classpath refid="seeniumm.classpath"/>
        </java>
    </target>
    <target name="Primenumber">
        <java classname="javapack.Primenumber" failonerror="true" fork="yes">
            <classpath refid="seeniumm.classpath"/>
        </java>
    </target>
    <target name="PyramidNumber">
        <java classname="javapack.PyramidNumber" failonerror="true" fork="yes">
            <classpath refid="seeniumm.classpath"/>
        </java>
    </target>
    <target name="ScreenShotDemo (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="Events.ScreenShotDemo" todir="${junit.output.dir}"/>
            <classpath refid="seeniumm.classpath"/>
        </junit>
    </target>
    <target name="WebDDDemo (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="seenium.WebDDDemo" todir="${junit.output.dir}"/>
            <classpath refid="seeniumm.classpath"/>
        </junit>
    </target>
    <target name="WebElementsDemo (3)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="seenium.WebElementsDemo" todir="${junit.output.dir}"/>
            <classpath refid="seeniumm.classpath"/>
        </junit>
    </target>
    <target name="WebElementsDemo1">
        <java classname="seenium.WebElementsDemo1" failonerror="true" fork="yes">
            <classpath refid="seeniumm.classpath"/>
        </java>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
